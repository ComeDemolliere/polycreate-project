/*
 * generated by Xtext 2.14.0
 */
grammar InternalPolycreate;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package fr.unice.polytech.si5.webots.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.unice.polytech.si5.webots.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.unice.polytech.si5.webots.services.PolycreateGrammarAccess;

}

@parser::members {

 	private PolycreateGrammarAccess grammarAccess;

    public InternalPolycreateParser(TokenStream input, PolycreateGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "RobotProgram";
   	}

   	@Override
   	protected PolycreateGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRobotProgram
entryRuleRobotProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRobotProgramRule()); }
	iv_ruleRobotProgram=ruleRobotProgram
	{ $current=$iv_ruleRobotProgram.current; }
	EOF;

// Rule RobotProgram
ruleRobotProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRobotProgramAccess().getRobotProgramAction_0(),
					$current);
			}
		)
		otherlv_1='RobotProgram'
		{
			newLeafNode(otherlv_1, grammarAccess.getRobotProgramAccess().getRobotProgramKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRobotProgramAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRobotProgramRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"fr.unice.polytech.si5.webots.Polycreate.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRobotProgramAccess().getInitialStateStateParserRuleCall_3_0());
				}
				lv_initialState_3_0=ruleState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRobotProgramRule());
					}
					set(
						$current,
						"initialState",
						lv_initialState_3_0,
						"fr.unice.polytech.si5.webots.Polycreate.State");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRobotProgramAccess().getOwnedStatesStateParserRuleCall_4_0());
				}
				lv_ownedStates_4_0=ruleState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRobotProgramRule());
					}
					add(
						$current,
						"ownedStates",
						lv_ownedStates_4_0,
						"fr.unice.polytech.si5.webots.Polycreate.State");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getRobotProgramAccess().getGlobalTransitionsTransitionParserRuleCall_5_0());
				}
				lv_globalTransitions_5_0=ruleTransition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRobotProgramRule());
					}
					add(
						$current,
						"globalTransitions",
						lv_globalTransitions_5_0,
						"fr.unice.polytech.si5.webots.Polycreate.Transition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getConditionAccess().getSimpleConditionParserRuleCall());
	}
	this_SimpleCondition_0=ruleSimpleCondition
	{
		$current = $this_SimpleCondition_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getActionAccess().getMoveActionParserRuleCall_0());
		}
		this_MoveAction_0=ruleMoveAction
		{
			$current = $this_MoveAction_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getTurnActionParserRuleCall_1());
		}
		this_TurnAction_1=ruleTurnAction
		{
			$current = $this_TurnAction_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTransition
entryRuleTransition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransitionRule()); }
	iv_ruleTransition=ruleTransition
	{ $current=$iv_ruleTransition.current; }
	EOF;

// Rule Transition
ruleTransition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Transition'
		{
			newLeafNode(otherlv_0, grammarAccess.getTransitionAccess().getTransitionKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='conditions'
			{
				newLeafNode(otherlv_2, grammarAccess.getTransitionAccess().getConditionsKeyword_2_0());
			}
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransitionAccess().getConditionsConditionParserRuleCall_2_2_0());
					}
					lv_conditions_4_0=ruleCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransitionRule());
						}
						add(
							$current,
							"conditions",
							lv_conditions_4_0,
							"fr.unice.polytech.si5.webots.Polycreate.Condition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getTransitionAccess().getCommaKeyword_2_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTransitionAccess().getConditionsConditionParserRuleCall_2_3_1_0());
						}
						lv_conditions_6_0=ruleCondition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTransitionRule());
							}
							add(
								$current,
								"conditions",
								lv_conditions_6_0,
								"fr.unice.polytech.si5.webots.Polycreate.Condition");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_7='}'
			{
				newLeafNode(otherlv_7, grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_2_4());
			}
		)?
		otherlv_8='nextState'
		{
			newLeafNode(otherlv_8, grammarAccess.getTransitionAccess().getNextStateKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransitionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getTransitionAccess().getNextStateStateCrossReference_4_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleState
entryRuleState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	iv_ruleState=ruleState
	{ $current=$iv_ruleState.current; }
	EOF;

// Rule State
ruleState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStateAccess().getStateAction_0(),
					$current);
			}
		)
		otherlv_1='State'
		{
			newLeafNode(otherlv_1, grammarAccess.getStateAccess().getStateKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStateAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"fr.unice.polytech.si5.webots.Polycreate.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='actions'
			{
				newLeafNode(otherlv_4, grammarAccess.getStateAccess().getActionsKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStateAccess().getActionsActionParserRuleCall_4_2_0());
					}
					lv_actions_6_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStateRule());
						}
						add(
							$current,
							"actions",
							lv_actions_6_0,
							"fr.unice.polytech.si5.webots.Polycreate.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getStateAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStateAccess().getActionsActionParserRuleCall_4_3_1_0());
						}
						lv_actions_8_0=ruleAction
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStateRule());
							}
							add(
								$current,
								"actions",
								lv_actions_8_0,
								"fr.unice.polytech.si5.webots.Polycreate.Action");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getStateAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		(
			otherlv_10='transitions'
			{
				newLeafNode(otherlv_10, grammarAccess.getStateAccess().getTransitionsKeyword_5_0());
			}
			otherlv_11='{'
			{
				newLeafNode(otherlv_11, grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStateAccess().getTransitionsTransitionParserRuleCall_5_2_0());
					}
					lv_transitions_12_0=ruleTransition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStateRule());
						}
						add(
							$current,
							"transitions",
							lv_transitions_12_0,
							"fr.unice.polytech.si5.webots.Polycreate.Transition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getStateAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStateAccess().getTransitionsTransitionParserRuleCall_5_3_1_0());
						}
						lv_transitions_14_0=ruleTransition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStateRule());
							}
							add(
								$current,
								"transitions",
								lv_transitions_14_0,
								"fr.unice.polytech.si5.webots.Polycreate.Transition");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_15='}'
			{
				newLeafNode(otherlv_15, grammarAccess.getStateAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		otherlv_16='}'
		{
			newLeafNode(otherlv_16, grammarAccess.getStateAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleSimpleCondition
entryRuleSimpleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleConditionRule()); }
	iv_ruleSimpleCondition=ruleSimpleCondition
	{ $current=$iv_ruleSimpleCondition.current; }
	EOF;

// Rule SimpleCondition
ruleSimpleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSimpleConditionAccess().getSimpleConditionAction_0(),
					$current);
			}
		)
		otherlv_1='SimpleCondition'
		{
			newLeafNode(otherlv_1, grammarAccess.getSimpleConditionAccess().getSimpleConditionKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSimpleConditionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='detectionType'
			{
				newLeafNode(otherlv_3, grammarAccess.getSimpleConditionAccess().getDetectionTypeKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSimpleConditionAccess().getDetectionTypeDETECTIONEnumRuleCall_3_1_0());
					}
					lv_detectionType_4_0=ruleDETECTION
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimpleConditionRule());
						}
						set(
							$current,
							"detectionType",
							lv_detectionType_4_0,
							"fr.unice.polytech.si5.webots.Polycreate.DETECTION");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getSimpleConditionAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleMoveAction
entryRuleMoveAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMoveActionRule()); }
	iv_ruleMoveAction=ruleMoveAction
	{ $current=$iv_ruleMoveAction.current; }
	EOF;

// Rule MoveAction
ruleMoveAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMoveActionAccess().getMoveActionAction_0(),
					$current);
			}
		)
		otherlv_1='MoveAction'
		{
			newLeafNode(otherlv_1, grammarAccess.getMoveActionAccess().getMoveActionKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMoveActionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='direction'
			{
				newLeafNode(otherlv_3, grammarAccess.getMoveActionAccess().getDirectionKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMoveActionAccess().getDirectionDIRECTIONEnumRuleCall_3_1_0());
					}
					lv_direction_4_0=ruleDIRECTION
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMoveActionRule());
						}
						set(
							$current,
							"direction",
							lv_direction_4_0,
							"fr.unice.polytech.si5.webots.Polycreate.DIRECTION");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getMoveActionAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleTurnAction
entryRuleTurnAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTurnActionRule()); }
	iv_ruleTurnAction=ruleTurnAction
	{ $current=$iv_ruleTurnAction.current; }
	EOF;

// Rule TurnAction
ruleTurnAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTurnActionAccess().getTurnActionAction_0(),
					$current);
			}
		)
		otherlv_1='TurnAction'
		{
			newLeafNode(otherlv_1, grammarAccess.getTurnActionAccess().getTurnActionKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getTurnActionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='angle'
			{
				newLeafNode(otherlv_3, grammarAccess.getTurnActionAccess().getAngleKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTurnActionAccess().getAngleEDoubleParserRuleCall_3_1_0());
					}
					lv_angle_4_0=ruleEDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTurnActionRule());
						}
						set(
							$current,
							"angle",
							lv_angle_4_0,
							"fr.unice.polytech.si5.webots.Polycreate.EDouble");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getTurnActionAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleEDouble
entryRuleEDouble returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEDoubleRule()); }
	iv_ruleEDouble=ruleEDouble
	{ $current=$iv_ruleEDouble.current.getText(); }
	EOF;

// Rule EDouble
ruleEDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0());
			}
		)?
		(
			this_INT_1=RULE_INT
			{
				$current.merge(this_INT_1);
			}
			{
				newLeafNode(this_INT_1, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1());
			}
		)?
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEDoubleAccess().getFullStopKeyword_2());
		}
		this_INT_3=RULE_INT
		{
			$current.merge(this_INT_3);
		}
		{
			newLeafNode(this_INT_3, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3());
		}
		(
			(
				kw='E'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_0());
				}
				    |
				kw='e'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_1());
				}
			)
			(
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1());
				}
			)?
			this_INT_7=RULE_INT
			{
				$current.merge(this_INT_7);
			}
			{
				newLeafNode(this_INT_7, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2());
			}
		)?
	)
;

// Rule DETECTION
ruleDETECTION returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='COLLISION_LEFT'
			{
				$current = grammarAccess.getDETECTIONAccess().getCOLLISION_LEFTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDETECTIONAccess().getCOLLISION_LEFTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='COLLISION_RIGHT'
			{
				$current = grammarAccess.getDETECTIONAccess().getCOLLISION_RIGHTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDETECTIONAccess().getCOLLISION_RIGHTEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='VIRTUAL_WALL'
			{
				$current = grammarAccess.getDETECTIONAccess().getVIRTUAL_WALLEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDETECTIONAccess().getVIRTUAL_WALLEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='CLIFF_LEFT'
			{
				$current = grammarAccess.getDETECTIONAccess().getCLIFF_LEFTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getDETECTIONAccess().getCLIFF_LEFTEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='CLIFF_RIGHT'
			{
				$current = grammarAccess.getDETECTIONAccess().getCLIFF_RIGHTEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getDETECTIONAccess().getCLIFF_RIGHTEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='CLIFF_FRONT'
			{
				$current = grammarAccess.getDETECTIONAccess().getCLIFF_FRONTEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getDETECTIONAccess().getCLIFF_FRONTEnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule DIRECTION
ruleDIRECTION returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='FORWARD'
			{
				$current = grammarAccess.getDIRECTIONAccess().getFORWARDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDIRECTIONAccess().getFORWARDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='BACKWARD'
			{
				$current = grammarAccess.getDIRECTIONAccess().getBACKWARDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDIRECTIONAccess().getBACKWARDEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
